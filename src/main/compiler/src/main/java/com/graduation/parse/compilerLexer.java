// Generated from java-escape by ANTLR 4.11.1
package com.graduation.parse;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class compilerLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, WS=14, OP_ID=15, ID=16, GUARD=17, 
		JAVA_CODE=18;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "WS", "OP_ID", "ID", "GUARD", "JAVA_CODE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'${{'", "','", "'}}$'", "'{'", "'}'", "'__enter__'", "'__exit__'", 
			"'=>'", "'('", "')'", "':'", "'<'", "'>'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, "WS", "OP_ID", "ID", "GUARD", "JAVA_CODE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public compilerLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "compiler.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0012\u00ab\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\r\u0004\rU\b\r\u000b\r\f\rV\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0004\u000e]\b\u000e\u000b\u000e\f\u000e^\u0001\u000e"+
		"\u0005\u000eb\b\u000e\n\u000e\f\u000ee\t\u000e\u0001\u000e\u0001\u000e"+
		"\u0004\u000ei\b\u000e\u000b\u000e\f\u000ej\u0001\u000e\u0005\u000en\b"+
		"\u000e\n\u000e\f\u000eq\t\u000e\u0005\u000es\b\u000e\n\u000e\f\u000ev"+
		"\t\u000e\u0001\u000f\u0004\u000fy\b\u000f\u000b\u000f\f\u000fz\u0001\u000f"+
		"\u0005\u000f~\b\u000f\n\u000f\f\u000f\u0081\t\u000f\u0001\u000f\u0001"+
		"\u000f\u0004\u000f\u0085\b\u000f\u000b\u000f\f\u000f\u0086\u0001\u000f"+
		"\u0005\u000f\u008a\b\u000f\n\u000f\f\u000f\u008d\t\u000f\u0005\u000f\u008f"+
		"\b\u000f\n\u000f\f\u000f\u0092\t\u000f\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0005\u0010\u0098\b\u0010\n\u0010\f\u0010\u009b\t\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0005\u0011\u00a4\b\u0011\n\u0011\f\u0011\u00a7\t\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0002\u0099\u00a5\u0000\u0012\u0001\u0001\u0003"+
		"\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011"+
		"\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010"+
		"!\u0011#\u0012\u0001\u0000\u0005\u0003\u0000\t\n\r\r  \u0002\u0000AZa"+
		"z\u0003\u000009AZaz\u0001\u0000--\u0001\u0000..\u00b7\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0001%\u0001\u0000\u0000\u0000\u0003)"+
		"\u0001\u0000\u0000\u0000\u0005+\u0001\u0000\u0000\u0000\u0007/\u0001\u0000"+
		"\u0000\u0000\t1\u0001\u0000\u0000\u0000\u000b3\u0001\u0000\u0000\u0000"+
		"\r=\u0001\u0000\u0000\u0000\u000fF\u0001\u0000\u0000\u0000\u0011I\u0001"+
		"\u0000\u0000\u0000\u0013K\u0001\u0000\u0000\u0000\u0015M\u0001\u0000\u0000"+
		"\u0000\u0017O\u0001\u0000\u0000\u0000\u0019Q\u0001\u0000\u0000\u0000\u001b"+
		"T\u0001\u0000\u0000\u0000\u001dZ\u0001\u0000\u0000\u0000\u001fx\u0001"+
		"\u0000\u0000\u0000!\u0093\u0001\u0000\u0000\u0000#\u009f\u0001\u0000\u0000"+
		"\u0000%&\u0005$\u0000\u0000&\'\u0005{\u0000\u0000\'(\u0005{\u0000\u0000"+
		"(\u0002\u0001\u0000\u0000\u0000)*\u0005,\u0000\u0000*\u0004\u0001\u0000"+
		"\u0000\u0000+,\u0005}\u0000\u0000,-\u0005}\u0000\u0000-.\u0005$\u0000"+
		"\u0000.\u0006\u0001\u0000\u0000\u0000/0\u0005{\u0000\u00000\b\u0001\u0000"+
		"\u0000\u000012\u0005}\u0000\u00002\n\u0001\u0000\u0000\u000034\u0005_"+
		"\u0000\u000045\u0005_\u0000\u000056\u0005e\u0000\u000067\u0005n\u0000"+
		"\u000078\u0005t\u0000\u000089\u0005e\u0000\u00009:\u0005r\u0000\u0000"+
		":;\u0005_\u0000\u0000;<\u0005_\u0000\u0000<\f\u0001\u0000\u0000\u0000"+
		"=>\u0005_\u0000\u0000>?\u0005_\u0000\u0000?@\u0005e\u0000\u0000@A\u0005"+
		"x\u0000\u0000AB\u0005i\u0000\u0000BC\u0005t\u0000\u0000CD\u0005_\u0000"+
		"\u0000DE\u0005_\u0000\u0000E\u000e\u0001\u0000\u0000\u0000FG\u0005=\u0000"+
		"\u0000GH\u0005>\u0000\u0000H\u0010\u0001\u0000\u0000\u0000IJ\u0005(\u0000"+
		"\u0000J\u0012\u0001\u0000\u0000\u0000KL\u0005)\u0000\u0000L\u0014\u0001"+
		"\u0000\u0000\u0000MN\u0005:\u0000\u0000N\u0016\u0001\u0000\u0000\u0000"+
		"OP\u0005<\u0000\u0000P\u0018\u0001\u0000\u0000\u0000QR\u0005>\u0000\u0000"+
		"R\u001a\u0001\u0000\u0000\u0000SU\u0007\u0000\u0000\u0000TS\u0001\u0000"+
		"\u0000\u0000UV\u0001\u0000\u0000\u0000VT\u0001\u0000\u0000\u0000VW\u0001"+
		"\u0000\u0000\u0000WX\u0001\u0000\u0000\u0000XY\u0006\r\u0000\u0000Y\u001c"+
		"\u0001\u0000\u0000\u0000Z\\\u0005$\u0000\u0000[]\u0007\u0001\u0000\u0000"+
		"\\[\u0001\u0000\u0000\u0000]^\u0001\u0000\u0000\u0000^\\\u0001\u0000\u0000"+
		"\u0000^_\u0001\u0000\u0000\u0000_c\u0001\u0000\u0000\u0000`b\u0007\u0002"+
		"\u0000\u0000a`\u0001\u0000\u0000\u0000be\u0001\u0000\u0000\u0000ca\u0001"+
		"\u0000\u0000\u0000cd\u0001\u0000\u0000\u0000dt\u0001\u0000\u0000\u0000"+
		"ec\u0001\u0000\u0000\u0000fh\u0007\u0003\u0000\u0000gi\u0007\u0001\u0000"+
		"\u0000hg\u0001\u0000\u0000\u0000ij\u0001\u0000\u0000\u0000jh\u0001\u0000"+
		"\u0000\u0000jk\u0001\u0000\u0000\u0000ko\u0001\u0000\u0000\u0000ln\u0007"+
		"\u0002\u0000\u0000ml\u0001\u0000\u0000\u0000nq\u0001\u0000\u0000\u0000"+
		"om\u0001\u0000\u0000\u0000op\u0001\u0000\u0000\u0000ps\u0001\u0000\u0000"+
		"\u0000qo\u0001\u0000\u0000\u0000rf\u0001\u0000\u0000\u0000sv\u0001\u0000"+
		"\u0000\u0000tr\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000u\u001e"+
		"\u0001\u0000\u0000\u0000vt\u0001\u0000\u0000\u0000wy\u0007\u0001\u0000"+
		"\u0000xw\u0001\u0000\u0000\u0000yz\u0001\u0000\u0000\u0000zx\u0001\u0000"+
		"\u0000\u0000z{\u0001\u0000\u0000\u0000{\u007f\u0001\u0000\u0000\u0000"+
		"|~\u0007\u0002\u0000\u0000}|\u0001\u0000\u0000\u0000~\u0081\u0001\u0000"+
		"\u0000\u0000\u007f}\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000"+
		"\u0000\u0080\u0090\u0001\u0000\u0000\u0000\u0081\u007f\u0001\u0000\u0000"+
		"\u0000\u0082\u0084\u0007\u0004\u0000\u0000\u0083\u0085\u0007\u0001\u0000"+
		"\u0000\u0084\u0083\u0001\u0000\u0000\u0000\u0085\u0086\u0001\u0000\u0000"+
		"\u0000\u0086\u0084\u0001\u0000\u0000\u0000\u0086\u0087\u0001\u0000\u0000"+
		"\u0000\u0087\u008b\u0001\u0000\u0000\u0000\u0088\u008a\u0007\u0002\u0000"+
		"\u0000\u0089\u0088\u0001\u0000\u0000\u0000\u008a\u008d\u0001\u0000\u0000"+
		"\u0000\u008b\u0089\u0001\u0000\u0000\u0000\u008b\u008c\u0001\u0000\u0000"+
		"\u0000\u008c\u008f\u0001\u0000\u0000\u0000\u008d\u008b\u0001\u0000\u0000"+
		"\u0000\u008e\u0082\u0001\u0000\u0000\u0000\u008f\u0092\u0001\u0000\u0000"+
		"\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0090\u0091\u0001\u0000\u0000"+
		"\u0000\u0091 \u0001\u0000\u0000\u0000\u0092\u0090\u0001\u0000\u0000\u0000"+
		"\u0093\u0094\u0005[\u0000\u0000\u0094\u0095\u0005#\u0000\u0000\u0095\u0099"+
		"\u0001\u0000\u0000\u0000\u0096\u0098\t\u0000\u0000\u0000\u0097\u0096\u0001"+
		"\u0000\u0000\u0000\u0098\u009b\u0001\u0000\u0000\u0000\u0099\u009a\u0001"+
		"\u0000\u0000\u0000\u0099\u0097\u0001\u0000\u0000\u0000\u009a\u009c\u0001"+
		"\u0000\u0000\u0000\u009b\u0099\u0001\u0000\u0000\u0000\u009c\u009d\u0005"+
		"#\u0000\u0000\u009d\u009e\u0005]\u0000\u0000\u009e\"\u0001\u0000\u0000"+
		"\u0000\u009f\u00a0\u0005{\u0000\u0000\u00a0\u00a1\u0005#\u0000\u0000\u00a1"+
		"\u00a5\u0001\u0000\u0000\u0000\u00a2\u00a4\t\u0000\u0000\u0000\u00a3\u00a2"+
		"\u0001\u0000\u0000\u0000\u00a4\u00a7\u0001\u0000\u0000\u0000\u00a5\u00a6"+
		"\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000\u0000\u0000\u00a6\u00a8"+
		"\u0001\u0000\u0000\u0000\u00a7\u00a5\u0001\u0000\u0000\u0000\u00a8\u00a9"+
		"\u0005#\u0000\u0000\u00a9\u00aa\u0005}\u0000\u0000\u00aa$\u0001\u0000"+
		"\u0000\u0000\u000e\u0000V^cjotz\u007f\u0086\u008b\u0090\u0099\u00a5\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}